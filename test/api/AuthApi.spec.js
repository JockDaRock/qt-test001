/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PerchApi);
  }
}(this, function(expect, PerchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PerchApi.AuthApi();
  });

  describe('(package)', function() {
    describe('AuthApi', function() {
      describe('auth2faDisableUpdate', function() {
        it('should call auth2faDisableUpdate successfully', function(done) {
          // TODO: uncomment auth2faDisableUpdate call
          /*

          instance.auth2faDisableUpdate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('auth2faDisableUpdate_0', function() {
        it('should call auth2faDisableUpdate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for auth2faDisableUpdate_0 call
          /*
          var version = "version_example";

          instance.auth2faDisableUpdate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('auth2faEnableUpdate', function() {
        it('should call auth2faEnableUpdate successfully', function(done) {
          // TODO: uncomment auth2faEnableUpdate call
          /*

          instance.auth2faEnableUpdate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('auth2faEnableUpdate_0', function() {
        it('should call auth2faEnableUpdate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for auth2faEnableUpdate_0 call
          /*
          var version = "version_example";

          instance.auth2faEnableUpdate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('auth2faStatusList', function() {
        it('should call auth2faStatusList successfully', function(done) {
          // TODO: uncomment auth2faStatusList call
          /*

          instance.auth2faStatusList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('auth2faStatusList_0', function() {
        it('should call auth2faStatusList_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for auth2faStatusList_0 call
          /*
          var version = "version_example";

          instance.auth2faStatusList_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authAccessTokenCreate', function() {
        it('should call authAccessTokenCreate successfully', function(done) {
          // TODO: uncomment authAccessTokenCreate call
          /*

          instance.authAccessTokenCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authAccessTokenCreate_0', function() {
        it('should call authAccessTokenCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authAccessTokenCreate_0 call
          /*
          var version = "version_example";

          instance.authAccessTokenCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authAuth0JwksList', function() {
        it('should call authAuth0JwksList successfully', function(done) {
          // TODO: uncomment authAuth0JwksList call
          /*

          instance.authAuth0JwksList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authAuth0JwksList_0', function() {
        it('should call authAuth0JwksList_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authAuth0JwksList_0 call
          /*
          var version = "version_example";

          instance.authAuth0JwksList_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authCannySsoTokenList', function() {
        it('should call authCannySsoTokenList successfully', function(done) {
          // TODO: uncomment authCannySsoTokenList call
          /*

          instance.authCannySsoTokenList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authCannySsoTokenList_0', function() {
        it('should call authCannySsoTokenList_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authCannySsoTokenList_0 call
          /*
          var version = "version_example";

          instance.authCannySsoTokenList_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authDeviceTokenCreate', function() {
        it('should call authDeviceTokenCreate successfully', function(done) {
          // TODO: uncomment authDeviceTokenCreate call
          /*

          instance.authDeviceTokenCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authDeviceTokenCreate_0', function() {
        it('should call authDeviceTokenCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authDeviceTokenCreate_0 call
          /*
          var version = "version_example";

          instance.authDeviceTokenCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaList', function() {
        it('should call authMfaList successfully', function(done) {
          // TODO: uncomment authMfaList call
          /*

          instance.authMfaList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaList_0', function() {
        it('should call authMfaList_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMfaList_0 call
          /*
          var version = "version_example";

          instance.authMfaList_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRegisterCreate', function() {
        it('should call authMfaRegisterCreate successfully', function(done) {
          // TODO: uncomment authMfaRegisterCreate call
          /*

          instance.authMfaRegisterCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRegisterCreate_0', function() {
        it('should call authMfaRegisterCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMfaRegisterCreate_0 call
          /*
          var version = "version_example";

          instance.authMfaRegisterCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRegisterList', function() {
        it('should call authMfaRegisterList successfully', function(done) {
          // TODO: uncomment authMfaRegisterList call
          /*

          instance.authMfaRegisterList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRegisterList_0', function() {
        it('should call authMfaRegisterList_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMfaRegisterList_0 call
          /*
          var version = "version_example";

          instance.authMfaRegisterList_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRemoveCreate', function() {
        it('should call authMfaRemoveCreate successfully', function(done) {
          // TODO: uncomment authMfaRemoveCreate call
          /*

          instance.authMfaRemoveCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRemoveCreate_0', function() {
        it('should call authMfaRemoveCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMfaRemoveCreate_0 call
          /*
          var version = "version_example";

          instance.authMfaRemoveCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRemoveDelete', function() {
        it('should call authMfaRemoveDelete successfully', function(done) {
          // TODO: uncomment authMfaRemoveDelete call
          /*

          instance.authMfaRemoveDelete(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMfaRemoveDelete_0', function() {
        it('should call authMfaRemoveDelete_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMfaRemoveDelete_0 call
          /*
          var version = "version_example";

          instance.authMfaRemoveDelete_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMigrateDeviceCreate', function() {
        it('should call authMigrateDeviceCreate successfully', function(done) {
          // TODO: uncomment authMigrateDeviceCreate call
          /*

          instance.authMigrateDeviceCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authMigrateDeviceCreate_0', function() {
        it('should call authMigrateDeviceCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authMigrateDeviceCreate_0 call
          /*
          var version = "version_example";

          instance.authMigrateDeviceCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authPasswordResetCreate', function() {
        it('should call authPasswordResetCreate successfully', function(done) {
          // TODO: uncomment authPasswordResetCreate call
          /*

          instance.authPasswordResetCreate(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authPasswordResetCreate_0', function() {
        it('should call authPasswordResetCreate_0 successfully', function(done) {
          // TODO: uncomment, update parameter values for authPasswordResetCreate_0 call
          /*
          var version = "version_example";

          instance.authPasswordResetCreate_0(version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
