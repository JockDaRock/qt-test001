/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Preference'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Preference'));
  } else {
    // Browser globals (root is window)
    if (!root.PerchApi) {
      root.PerchApi = {};
    }
    root.PerchApi.AboutMeSerializerV1 = factory(root.PerchApi.ApiClient, root.PerchApi.Preference);
  }
}(this, function(ApiClient, Preference) {
  'use strict';

  /**
   * The AboutMeSerializerV1 model module.
   * @module model/AboutMeSerializerV1
   * @version v1
   */

  /**
   * Constructs a new <code>AboutMeSerializerV1</code>.
   * @alias module:model/AboutMeSerializerV1
   * @class
   * @param prefs {module:model/Preference} 
   * @param username {String} Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   * @param firstName {String} 
   * @param lastName {String} 
   */
  var exports = function(prefs, username, firstName, lastName) {
    this.prefs = prefs;
    this.username = username;
    this.firstName = firstName;
    this.lastName = lastName;
  };

  /**
   * Constructs a <code>AboutMeSerializerV1</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AboutMeSerializerV1} obj Optional instance to populate.
   * @return {module:model/AboutMeSerializerV1} The populated <code>AboutMeSerializerV1</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('prefs'))
        obj.prefs = Preference.constructFromObject(data['prefs']);
      if (data.hasOwnProperty('username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('postalCode'))
        obj.postalCode = ApiClient.convertToType(data['postalCode'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('staff'))
        obj.staff = ApiClient.convertToType(data['staff'], 'Boolean');
      if (data.hasOwnProperty('is_mssp_member'))
        obj.isMsspMember = ApiClient.convertToType(data['is_mssp_member'], 'Boolean');
      if (data.hasOwnProperty('organizations'))
        obj.organizations = ApiClient.convertToType(data['organizations'], 'String');
      if (data.hasOwnProperty('community'))
        obj.community = ApiClient.convertToType(data['community'], 'String');
      if (data.hasOwnProperty('tours'))
        obj.tours = ApiClient.convertToType(data['tours'], 'String');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {module:model/Preference} prefs
   */
  exports.prototype.prefs = undefined;

  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   * @member {String} username
   */
  exports.prototype.username = undefined;

  /**
   * @member {String} firstName
   */
  exports.prototype.firstName = undefined;

  /**
   * @member {String} lastName
   */
  exports.prototype.lastName = undefined;

  /**
   * @member {String} address1
   */
  exports.prototype.address1 = undefined;

  /**
   * @member {String} address2
   */
  exports.prototype.address2 = undefined;

  /**
   * @member {String} city
   */
  exports.prototype.city = undefined;

  /**
   * @member {String} state
   */
  exports.prototype.state = undefined;

  /**
   * @member {String} postalCode
   */
  exports.prototype.postalCode = undefined;

  /**
   * @member {String} phone
   */
  exports.prototype.phone = undefined;

  /**
   * @member {Boolean} staff
   */
  exports.prototype.staff = undefined;

  /**
   * @member {Boolean} isMsspMember
   */
  exports.prototype.isMsspMember = undefined;

  /**
   * @member {String} organizations
   */
  exports.prototype.organizations = undefined;

  /**
   * @member {String} community
   */
  exports.prototype.community = undefined;

  /**
   * @member {String} tours
   */
  exports.prototype.tours = undefined;

  return exports;

}));
