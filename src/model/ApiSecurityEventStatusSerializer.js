/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PerchApi) {
      root.PerchApi = {};
    }
    root.PerchApi.ApiSecurityEventStatusSerializer = factory(root.PerchApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ApiSecurityEventStatusSerializer model module.
   * @module model/ApiSecurityEventStatusSerializer
   * @version v1
   */

  /**
   * Constructs a new <code>ApiSecurityEventStatusSerializer</code>.
   * @alias module:model/ApiSecurityEventStatusSerializer
   * @class
   * @param indicatorId {String} 
   * @param team {Number} 
   */
  var exports = function(indicatorId, team) {
    this.indicatorId = indicatorId;
    this.team = team;
  };

  /**
   * Constructs a <code>ApiSecurityEventStatusSerializer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApiSecurityEventStatusSerializer} obj Optional instance to populate.
   * @return {module:model/ApiSecurityEventStatusSerializer} The populated <code>ApiSecurityEventStatusSerializer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('indicator_id'))
        obj.indicatorId = ApiClient.convertToType(data['indicator_id'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'Date');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'Number');
      if (data.hasOwnProperty('closed_at'))
        obj.closedAt = ApiClient.convertToType(data['closed_at'], 'Date');
      if (data.hasOwnProperty('sla_expires_at'))
        obj.slaExpiresAt = ApiClient.convertToType(data['sla_expires_at'], 'Date');
      if (data.hasOwnProperty('sla_responded_at'))
        obj.slaRespondedAt = ApiClient.convertToType(data['sla_responded_at'], 'Date');
      if (data.hasOwnProperty('closed_reason'))
        obj.closedReason = ApiClient.convertToType(data['closed_reason'], 'Number');
      if (data.hasOwnProperty('closed_reason_detail'))
        obj.closedReasonDetail = ApiClient.convertToType(data['closed_reason_detail'], 'Number');
      if (data.hasOwnProperty('closed_notes'))
        obj.closedNotes = ApiClient.convertToType(data['closed_notes'], 'String');
      if (data.hasOwnProperty('team'))
        obj.team = ApiClient.convertToType(data['team'], 'Number');
      if (data.hasOwnProperty('suppressed_by'))
        obj.suppressedBy = ApiClient.convertToType(data['suppressed_by'], 'Number');
      if (data.hasOwnProperty('sla_responder'))
        obj.slaResponder = ApiClient.convertToType(data['sla_responder'], 'Number');
      if (data.hasOwnProperty('sla'))
        obj.sla = ApiClient.convertToType(data['sla'], 'Number');
      if (data.hasOwnProperty('closed_by'))
        obj.closedBy = ApiClient.convertToType(data['closed_by'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} indicatorId
   */
  exports.prototype.indicatorId = undefined;

  /**
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * @member {Number} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {Date} closedAt
   */
  exports.prototype.closedAt = undefined;

  /**
   * @member {Date} slaExpiresAt
   */
  exports.prototype.slaExpiresAt = undefined;

  /**
   * @member {Date} slaRespondedAt
   */
  exports.prototype.slaRespondedAt = undefined;

  /**
   * @member {Number} closedReason
   */
  exports.prototype.closedReason = undefined;

  /**
   * @member {Number} closedReasonDetail
   */
  exports.prototype.closedReasonDetail = undefined;

  /**
   * @member {String} closedNotes
   */
  exports.prototype.closedNotes = undefined;

  /**
   * @member {Number} team
   */
  exports.prototype.team = undefined;

  /**
   * @member {Number} suppressedBy
   */
  exports.prototype.suppressedBy = undefined;

  /**
   * @member {Number} slaResponder
   */
  exports.prototype.slaResponder = undefined;

  /**
   * @member {Number} sla
   */
  exports.prototype.sla = undefined;

  /**
   * @member {Number} closedBy
   */
  exports.prototype.closedBy = undefined;

  return exports;

}));
