/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MarketplaceStore'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MarketplaceStore'));
  } else {
    // Browser globals (root is window)
    if (!root.PerchApi) {
      root.PerchApi = {};
    }
    root.PerchApi.Collection = factory(root.PerchApi.ApiClient, root.PerchApi.MarketplaceStore);
  }
}(this, function(ApiClient, MarketplaceStore) {
  'use strict';

  /**
   * The Collection model module.
   * @module model/Collection
   * @version v1
   */

  /**
   * Constructs a new <code>Collection</code>.
   * @alias module:model/Collection
   * @class
   * @param itemType {String} 
   * @param storeId {Number} 
   */
  var exports = function(itemType, storeId) {
    this.itemType = itemType;
    this.storeId = storeId;
  };

  /**
   * Constructs a <code>Collection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Collection} obj Optional instance to populate.
   * @return {module:model/Collection} The populated <code>Collection</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('auto_add_managed_teams'))
        obj.autoAddManagedTeams = ApiClient.convertToType(data['auto_add_managed_teams'], 'String');
      if (data.hasOwnProperty('add_to_managed_teams'))
        obj.addToManagedTeams = ApiClient.convertToType(data['add_to_managed_teams'], 'Boolean');
      if (data.hasOwnProperty('created_by'))
        obj.createdBy = ApiClient.convertToType(data['created_by'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('install_count'))
        obj.installCount = ApiClient.convertToType(data['install_count'], 'Number');
      if (data.hasOwnProperty('is_installed'))
        obj.isInstalled = ApiClient.convertToType(data['is_installed'], 'Boolean');
      if (data.hasOwnProperty('is_owner'))
        obj.isOwner = ApiClient.convertToType(data['is_owner'], 'Boolean');
      if (data.hasOwnProperty('item_type'))
        obj.itemType = ApiClient.convertToType(data['item_type'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('patron_teams'))
        obj.patronTeams = ApiClient.convertToType(data['patron_teams'], 'String');
      if (data.hasOwnProperty('store'))
        obj.store = MarketplaceStore.constructFromObject(data['store']);
      if (data.hasOwnProperty('store_id'))
        obj.storeId = ApiClient.convertToType(data['store_id'], 'Number');
      if (data.hasOwnProperty('item_count'))
        obj.itemCount = ApiClient.convertToType(data['item_count'], 'String');
      if (data.hasOwnProperty('total_install_count'))
        obj.totalInstallCount = ApiClient.convertToType(data['total_install_count'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} autoAddManagedTeams
   */
  exports.prototype.autoAddManagedTeams = undefined;

  /**
   * @member {Boolean} addToManagedTeams
   * @default false
   */
  exports.prototype.addToManagedTeams = false;

  /**
   * @member {Number} createdBy
   */
  exports.prototype.createdBy = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Number} installCount
   */
  exports.prototype.installCount = undefined;

  /**
   * @member {Boolean} isInstalled
   */
  exports.prototype.isInstalled = undefined;

  /**
   * @member {Boolean} isOwner
   */
  exports.prototype.isOwner = undefined;

  /**
   * @member {String} itemType
   */
  exports.prototype.itemType = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} patronTeams
   */
  exports.prototype.patronTeams = undefined;

  /**
   * @member {module:model/MarketplaceStore} store
   */
  exports.prototype.store = undefined;

  /**
   * @member {Number} storeId
   */
  exports.prototype.storeId = undefined;

  /**
   * @member {String} itemCount
   */
  exports.prototype.itemCount = undefined;

  /**
   * @member {String} totalInstallCount
   */
  exports.prototype.totalInstallCount = undefined;

  return exports;

}));
