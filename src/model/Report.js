/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PerchApi) {
      root.PerchApi = {};
    }
    root.PerchApi.Report = factory(root.PerchApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Report model module.
   * @module model/Report
   * @version v1
   */

  /**
   * Constructs a new <code>Report</code>.
   * @alias module:model/Report
   * @class
   * @param runForTeam {Number} 
   * @param name {String} 
   * @param savedObjectType {String} 
   * @param savedObjectId {String} 
   * @param fromTime {Date} Earliest time to query results from
   * @param toTime {Date} Latest time to query results till
   */
  var exports = function(runForTeam, name, savedObjectType, savedObjectId, fromTime, toTime) {
    this.runForTeam = runForTeam;
    this.name = name;
    this.savedObjectType = savedObjectType;
    this.savedObjectId = savedObjectId;
    this.fromTime = fromTime;
    this.toTime = toTime;
  };

  /**
   * Constructs a <code>Report</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Report} obj Optional instance to populate.
   * @return {module:model/Report} The populated <code>Report</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('scheduled_report'))
        obj.scheduledReport = ApiClient.convertToType(data['scheduled_report'], 'Number');
      if (data.hasOwnProperty('run_for_team'))
        obj.runForTeam = ApiClient.convertToType(data['run_for_team'], 'Number');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('content_type'))
        obj.contentType = ApiClient.convertToType(data['content_type'], 'String');
      if (data.hasOwnProperty('output_size'))
        obj.outputSize = ApiClient.convertToType(data['output_size'], 'Number');
      if (data.hasOwnProperty('output_size_human'))
        obj.outputSizeHuman = ApiClient.convertToType(data['output_size_human'], 'String');
      if (data.hasOwnProperty('error_msg'))
        obj.errorMsg = ApiClient.convertToType(data['error_msg'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('saved_object_type'))
        obj.savedObjectType = ApiClient.convertToType(data['saved_object_type'], 'String');
      if (data.hasOwnProperty('saved_object_id'))
        obj.savedObjectId = ApiClient.convertToType(data['saved_object_id'], 'String');
      if (data.hasOwnProperty('from_time'))
        obj.fromTime = ApiClient.convertToType(data['from_time'], 'Date');
      if (data.hasOwnProperty('to_time'))
        obj.toTime = ApiClient.convertToType(data['to_time'], 'Date');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Number} scheduledReport
   */
  exports.prototype.scheduledReport = undefined;

  /**
   * @member {Number} runForTeam
   */
  exports.prototype.runForTeam = undefined;

  /**
   * @member {module:model/Report.StateEnum} state
   */
  exports.prototype.state = undefined;

  /**
   * The content type of the report output, if successfully completed
   * @member {String} contentType
   */
  exports.prototype.contentType = undefined;

  /**
   * The size in bytes of the report output, if successfully completed
   * @member {Number} outputSize
   */
  exports.prototype.outputSize = undefined;

  /**
   * @member {String} outputSizeHuman
   */
  exports.prototype.outputSizeHuman = undefined;

  /**
   * An error message as reported by Perchybana
   * @member {String} errorMsg
   */
  exports.prototype.errorMsg = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} savedObjectType
   */
  exports.prototype.savedObjectType = undefined;

  /**
   * @member {String} savedObjectId
   */
  exports.prototype.savedObjectId = undefined;

  /**
   * Earliest time to query results from
   * @member {Date} fromTime
   */
  exports.prototype.fromTime = undefined;

  /**
   * Latest time to query results till
   * @member {Date} toTime
   */
  exports.prototype.toTime = undefined;


  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "uninitiated"
     * @const
     */
    uninitiated: "uninitiated",

    /**
     * value: "initiated"
     * @const
     */
    initiated: "initiated",

    /**
     * value: "pending"
     * @const
     */
    pending: "pending",

    /**
     * value: "processing"
     * @const
     */
    processing: "processing",

    /**
     * value: "completed"
     * @const
     */
    completed: "completed",

    /**
     * value: "failed"
     * @const
     */
    failed: "failed",

    /**
     * value: "notified"
     * @const
     */
    notified: "notified",

    /**
     * value: "notify-skipped"
     * @const
     */
    notifySkipped: "notify-skipped"
  };

  return exports;

}));
