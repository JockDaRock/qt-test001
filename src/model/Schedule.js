/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PerchApi) {
      root.PerchApi = {};
    }
    root.PerchApi.Schedule = factory(root.PerchApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Schedule model module.
   * @module model/Schedule
   * @version v1
   */

  /**
   * Constructs a new <code>Schedule</code>.
   * @alias module:model/Schedule
   * @class
   * @param type {module:model/Schedule.TypeEnum} 
   * @param intervalUnit {module:model/Schedule.IntervalUnitEnum} 
   */
  var exports = function(type, intervalUnit) {
    this.type = type;
    this.intervalUnit = intervalUnit;
  };

  /**
   * Constructs a <code>Schedule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Schedule} obj Optional instance to populate.
   * @return {module:model/Schedule} The populated <code>Schedule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('interval_value'))
        obj.intervalValue = ApiClient.convertToType(data['interval_value'], 'Number');
      if (data.hasOwnProperty('interval_unit'))
        obj.intervalUnit = ApiClient.convertToType(data['interval_unit'], 'String');
      if (data.hasOwnProperty('days_of_month'))
        obj.daysOfMonth = ApiClient.convertToType(data['days_of_month'], ['Number']);
      if (data.hasOwnProperty('days_of_week'))
        obj.daysOfWeek = ApiClient.convertToType(data['days_of_week'], ['Number']);
      if (data.hasOwnProperty('hours'))
        obj.hours = ApiClient.convertToType(data['hours'], ['Number']);
      if (data.hasOwnProperty('minutes'))
        obj.minutes = ApiClient.convertToType(data['minutes'], ['Number']);
    }
    return obj;
  }

  /**
   * @member {module:model/Schedule.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {Number} intervalValue
   */
  exports.prototype.intervalValue = undefined;

  /**
   * @member {module:model/Schedule.IntervalUnitEnum} intervalUnit
   */
  exports.prototype.intervalUnit = undefined;

  /**
   * On monthly schedules, which days of month to run report on.
   * @member {Array.<Number>} daysOfMonth
   */
  exports.prototype.daysOfMonth = undefined;

  /**
   * @member {Array.<Number>} daysOfWeek
   */
  exports.prototype.daysOfWeek = undefined;

  /**
   * On monthly, weekly, or daily schedules, which hours of the day to run report on.
   * @member {Array.<Number>} hours
   */
  exports.prototype.hours = undefined;

  /**
   * On monthly, weekly, daily, or hourly, or schedules, which minutes of the hour to run report on.
   * @member {Array.<Number>} minutes
   */
  exports.prototype.minutes = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "interval"
     * @const
     */
    interval: "interval",

    /**
     * value: "hourly"
     * @const
     */
    hourly: "hourly",

    /**
     * value: "daily"
     * @const
     */
    daily: "daily",

    /**
     * value: "weekly"
     * @const
     */
    weekly: "weekly",

    /**
     * value: "monthly"
     * @const
     */
    monthly: "monthly"
  };


  /**
   * Allowed values for the <code>intervalUnit</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IntervalUnitEnum = {
    /**
     * value: "minute"
     * @const
     */
    minute: "minute",

    /**
     * value: "hour"
     * @const
     */
    hour: "hour",

    /**
     * value: "day"
     * @const
     */
    day: "day"
  };

  return exports;

}));
