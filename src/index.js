/*
 * Perch API
 * Interactive documentation functionality is incomplete and may not work as expected. We recommend you connect with a REST client such as Postman, Httpie, or even plan old CURL.   Obtain your API username, password, and key from your <a href=\"https://app.perchsecurity.com/user/groups\" target=\"blank\">group settings</a>   <br><h4>Root URL</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>Base URL</td><td>https://api.perch.rocks</td></tr><tr><td>Version</td><td>v1</td></tr></table>   <br><h4>Headers</h4><table class=\"parameters table table-bordered table-striped\"><tr><td>x-api-key</td><td>(your api key from the group settings page)</td></tr><tr><td>Authorization</td><td>Bearer (your access token returned from /auth/access_token)</td></tr></table>
 *
 * OpenAPI spec version: v1
 * Contact: help@perchsecurity.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AboutMe', 'model/AboutMeSerializerV1', 'model/AddOn', 'model/AlertSuppression', 'model/ApiCommunityListSerializer', 'model/ApiIndicatorSerializer', 'model/ApiSecurityEventStatusSerializer', 'model/Attribution', 'model/Blacklist', 'model/Collection', 'model/Comment', 'model/CommentSerializer', 'model/Community', 'model/CommunityAlertSuppression', 'model/CommunityFile', 'model/CommunityList', 'model/CommunityMember', 'model/CommunityNameChartSerializer', 'model/Credential', 'model/DefaultManagingTeams', 'model/EventNotification', 'model/IndicatorComment', 'model/Industry', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse20010', 'model/InlineResponse20011', 'model/InlineResponse20012', 'model/InlineResponse20013', 'model/InlineResponse20014', 'model/InlineResponse20015', 'model/InlineResponse20016', 'model/InlineResponse20017', 'model/InlineResponse20018', 'model/InlineResponse20019', 'model/InlineResponse2002', 'model/InlineResponse20020', 'model/InlineResponse20021', 'model/InlineResponse20022', 'model/InlineResponse20023', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse2005', 'model/InlineResponse2006', 'model/InlineResponse2007', 'model/InlineResponse2008', 'model/InlineResponse2009', 'model/IntelDataCommunitySerializer', 'model/IntelDataIndicatorSerializer', 'model/Invite', 'model/JoinCommunity', 'model/JoinTeam', 'model/LoginAttempt', 'model/MarketplaceItemStoreTeam', 'model/MarketplacePolymorphic', 'model/MarketplaceSourceCollection', 'model/MarketplaceStore', 'model/MetricsTeamSerializer', 'model/MitreAttackTactic', 'model/NameChartSerializer', 'model/NetworkSubnet', 'model/Observable', 'model/Organizations', 'model/Preference', 'model/PublicCommunitySerializer', 'model/PublicFirewallBlacklistSerializer', 'model/PublicIndicatorSerializer', 'model/PublicObservableSerializer', 'model/PublicTeamSerializer', 'model/PublicUserSerializer', 'model/RegisterDevice', 'model/RegisterUser', 'model/Report', 'model/SLA', 'model/SLACreation', 'model/SLATeam', 'model/SLAWindowCreation', 'model/SavedObject', 'model/Schedule', 'model/ScheduledReport', 'model/SensorCommand', 'model/SensorCommandResult', 'model/SiemAlertableMapping', 'model/SoftwareApproval', 'model/SoftwareApprovalList', 'model/SoftwareWatchlist', 'model/Store', 'model/StoreTeam', 'model/SupportedDevice', 'model/SuppressionsAndEscalations', 'model/TeamEnterpriseSSO', 'model/TeamHealth', 'model/TeamIntegration', 'model/TeamIntegrationLogEventWithTeam', 'model/TeamIpCount', 'model/TeamMfaSettings', 'model/TeamNoisyHosts', 'model/TeamSuppressionReasons', 'model/TeamUsage', 'model/TeamWebhook', 'model/TriggeredEventNotification', 'model/TriggeredEventNotificationSerializer', 'model/User', 'model/UserTeamList', 'model/Warnings', 'api/AddOnsApi', 'api/AlertsApi', 'api/ApiUserApi', 'api/AuthApi', 'api/BacktestApi', 'api/CommentsApi', 'api/CommunitiesApi', 'api/CommunityApi', 'api/CompanyApi', 'api/CompanyDetailValuesApi', 'api/ConfirmApi', 'api/EmailAvailabilityApi', 'api/EventsApi', 'api/IndicatorsApi', 'api/IndustryListApi', 'api/IntegrationsApi', 'api/InviteApi', 'api/LegacyApi', 'api/MetricsApi', 'api/MitreAttackTacticsApi', 'api/MspApi', 'api/ObjectDetailApi', 'api/PerchybanaApi', 'api/PostalcodeGeohashApi', 'api/RegisterDeviceApi', 'api/RegisterTeamApi', 'api/RegisterUserApi', 'api/SearchApi', 'api/SecurityEventsApi', 'api/SensorApi', 'api/SiemAlertingApi', 'api/SlackBotApi', 'api/SoftwareWatchlistApi', 'api/SquawkboxApi', 'api/SummaryApi', 'api/SuppressionApi', 'api/SuppressionsApi', 'api/TeamsApi', 'api/UserApi', 'api/V1Api', 'api/V2Api', 'api/VersionApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AboutMe'), require('./model/AboutMeSerializerV1'), require('./model/AddOn'), require('./model/AlertSuppression'), require('./model/ApiCommunityListSerializer'), require('./model/ApiIndicatorSerializer'), require('./model/ApiSecurityEventStatusSerializer'), require('./model/Attribution'), require('./model/Blacklist'), require('./model/Collection'), require('./model/Comment'), require('./model/CommentSerializer'), require('./model/Community'), require('./model/CommunityAlertSuppression'), require('./model/CommunityFile'), require('./model/CommunityList'), require('./model/CommunityMember'), require('./model/CommunityNameChartSerializer'), require('./model/Credential'), require('./model/DefaultManagingTeams'), require('./model/EventNotification'), require('./model/IndicatorComment'), require('./model/Industry'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse20010'), require('./model/InlineResponse20011'), require('./model/InlineResponse20012'), require('./model/InlineResponse20013'), require('./model/InlineResponse20014'), require('./model/InlineResponse20015'), require('./model/InlineResponse20016'), require('./model/InlineResponse20017'), require('./model/InlineResponse20018'), require('./model/InlineResponse20019'), require('./model/InlineResponse2002'), require('./model/InlineResponse20020'), require('./model/InlineResponse20021'), require('./model/InlineResponse20022'), require('./model/InlineResponse20023'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse2005'), require('./model/InlineResponse2006'), require('./model/InlineResponse2007'), require('./model/InlineResponse2008'), require('./model/InlineResponse2009'), require('./model/IntelDataCommunitySerializer'), require('./model/IntelDataIndicatorSerializer'), require('./model/Invite'), require('./model/JoinCommunity'), require('./model/JoinTeam'), require('./model/LoginAttempt'), require('./model/MarketplaceItemStoreTeam'), require('./model/MarketplacePolymorphic'), require('./model/MarketplaceSourceCollection'), require('./model/MarketplaceStore'), require('./model/MetricsTeamSerializer'), require('./model/MitreAttackTactic'), require('./model/NameChartSerializer'), require('./model/NetworkSubnet'), require('./model/Observable'), require('./model/Organizations'), require('./model/Preference'), require('./model/PublicCommunitySerializer'), require('./model/PublicFirewallBlacklistSerializer'), require('./model/PublicIndicatorSerializer'), require('./model/PublicObservableSerializer'), require('./model/PublicTeamSerializer'), require('./model/PublicUserSerializer'), require('./model/RegisterDevice'), require('./model/RegisterUser'), require('./model/Report'), require('./model/SLA'), require('./model/SLACreation'), require('./model/SLATeam'), require('./model/SLAWindowCreation'), require('./model/SavedObject'), require('./model/Schedule'), require('./model/ScheduledReport'), require('./model/SensorCommand'), require('./model/SensorCommandResult'), require('./model/SiemAlertableMapping'), require('./model/SoftwareApproval'), require('./model/SoftwareApprovalList'), require('./model/SoftwareWatchlist'), require('./model/Store'), require('./model/StoreTeam'), require('./model/SupportedDevice'), require('./model/SuppressionsAndEscalations'), require('./model/TeamEnterpriseSSO'), require('./model/TeamHealth'), require('./model/TeamIntegration'), require('./model/TeamIntegrationLogEventWithTeam'), require('./model/TeamIpCount'), require('./model/TeamMfaSettings'), require('./model/TeamNoisyHosts'), require('./model/TeamSuppressionReasons'), require('./model/TeamUsage'), require('./model/TeamWebhook'), require('./model/TriggeredEventNotification'), require('./model/TriggeredEventNotificationSerializer'), require('./model/User'), require('./model/UserTeamList'), require('./model/Warnings'), require('./api/AddOnsApi'), require('./api/AlertsApi'), require('./api/ApiUserApi'), require('./api/AuthApi'), require('./api/BacktestApi'), require('./api/CommentsApi'), require('./api/CommunitiesApi'), require('./api/CommunityApi'), require('./api/CompanyApi'), require('./api/CompanyDetailValuesApi'), require('./api/ConfirmApi'), require('./api/EmailAvailabilityApi'), require('./api/EventsApi'), require('./api/IndicatorsApi'), require('./api/IndustryListApi'), require('./api/IntegrationsApi'), require('./api/InviteApi'), require('./api/LegacyApi'), require('./api/MetricsApi'), require('./api/MitreAttackTacticsApi'), require('./api/MspApi'), require('./api/ObjectDetailApi'), require('./api/PerchybanaApi'), require('./api/PostalcodeGeohashApi'), require('./api/RegisterDeviceApi'), require('./api/RegisterTeamApi'), require('./api/RegisterUserApi'), require('./api/SearchApi'), require('./api/SecurityEventsApi'), require('./api/SensorApi'), require('./api/SiemAlertingApi'), require('./api/SlackBotApi'), require('./api/SoftwareWatchlistApi'), require('./api/SquawkboxApi'), require('./api/SummaryApi'), require('./api/SuppressionApi'), require('./api/SuppressionsApi'), require('./api/TeamsApi'), require('./api/UserApi'), require('./api/V1Api'), require('./api/V2Api'), require('./api/VersionApi'));
  }
}(function(ApiClient, AboutMe, AboutMeSerializerV1, AddOn, AlertSuppression, ApiCommunityListSerializer, ApiIndicatorSerializer, ApiSecurityEventStatusSerializer, Attribution, Blacklist, Collection, Comment, CommentSerializer, Community, CommunityAlertSuppression, CommunityFile, CommunityList, CommunityMember, CommunityNameChartSerializer, Credential, DefaultManagingTeams, EventNotification, IndicatorComment, Industry, InlineResponse200, InlineResponse2001, InlineResponse20010, InlineResponse20011, InlineResponse20012, InlineResponse20013, InlineResponse20014, InlineResponse20015, InlineResponse20016, InlineResponse20017, InlineResponse20018, InlineResponse20019, InlineResponse2002, InlineResponse20020, InlineResponse20021, InlineResponse20022, InlineResponse20023, InlineResponse2003, InlineResponse2004, InlineResponse2005, InlineResponse2006, InlineResponse2007, InlineResponse2008, InlineResponse2009, IntelDataCommunitySerializer, IntelDataIndicatorSerializer, Invite, JoinCommunity, JoinTeam, LoginAttempt, MarketplaceItemStoreTeam, MarketplacePolymorphic, MarketplaceSourceCollection, MarketplaceStore, MetricsTeamSerializer, MitreAttackTactic, NameChartSerializer, NetworkSubnet, Observable, Organizations, Preference, PublicCommunitySerializer, PublicFirewallBlacklistSerializer, PublicIndicatorSerializer, PublicObservableSerializer, PublicTeamSerializer, PublicUserSerializer, RegisterDevice, RegisterUser, Report, SLA, SLACreation, SLATeam, SLAWindowCreation, SavedObject, Schedule, ScheduledReport, SensorCommand, SensorCommandResult, SiemAlertableMapping, SoftwareApproval, SoftwareApprovalList, SoftwareWatchlist, Store, StoreTeam, SupportedDevice, SuppressionsAndEscalations, TeamEnterpriseSSO, TeamHealth, TeamIntegration, TeamIntegrationLogEventWithTeam, TeamIpCount, TeamMfaSettings, TeamNoisyHosts, TeamSuppressionReasons, TeamUsage, TeamWebhook, TriggeredEventNotification, TriggeredEventNotificationSerializer, User, UserTeamList, Warnings, AddOnsApi, AlertsApi, ApiUserApi, AuthApi, BacktestApi, CommentsApi, CommunitiesApi, CommunityApi, CompanyApi, CompanyDetailValuesApi, ConfirmApi, EmailAvailabilityApi, EventsApi, IndicatorsApi, IndustryListApi, IntegrationsApi, InviteApi, LegacyApi, MetricsApi, MitreAttackTacticsApi, MspApi, ObjectDetailApi, PerchybanaApi, PostalcodeGeohashApi, RegisterDeviceApi, RegisterTeamApi, RegisterUserApi, SearchApi, SecurityEventsApi, SensorApi, SiemAlertingApi, SlackBotApi, SoftwareWatchlistApi, SquawkboxApi, SummaryApi, SuppressionApi, SuppressionsApi, TeamsApi, UserApi, V1Api, V2Api, VersionApi) {
  'use strict';

  /**
   * Interactive_documentation_functionality_is_incomplete_and_may_not_work_as_expected__We_recommend_you_connect_with_a_REST_client_such_as_Postman_Httpie_or_even_plan_old_CURL__Obtain_your_API_username_password_and_key_from_your_a_hrefhttpsapp_perchsecurity_comusergroups_targetblankgroup_settingsa_brh4Root_URLh4table_classparameters_table_table_bordered_table_stripedtrtdBase_URLtdtdhttpsapi_perch_rockstdtrtrtdVersiontdtdv1tdtrtable_brh4Headersh4table_classparameters_table_table_bordered_table_stripedtrtdx_api_keytdtd_your_api_key_from_the_group_settings_pagetdtrtrtdAuthorizationtdtdBearer__your_access_token_returned_from_authaccess_tokentdtrtable.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PerchApi = require('index'); // See note below*.
   * var xxxSvc = new PerchApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PerchApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PerchApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PerchApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AboutMe model constructor.
     * @property {module:model/AboutMe}
     */
    AboutMe: AboutMe,
    /**
     * The AboutMeSerializerV1 model constructor.
     * @property {module:model/AboutMeSerializerV1}
     */
    AboutMeSerializerV1: AboutMeSerializerV1,
    /**
     * The AddOn model constructor.
     * @property {module:model/AddOn}
     */
    AddOn: AddOn,
    /**
     * The AlertSuppression model constructor.
     * @property {module:model/AlertSuppression}
     */
    AlertSuppression: AlertSuppression,
    /**
     * The ApiCommunityListSerializer model constructor.
     * @property {module:model/ApiCommunityListSerializer}
     */
    ApiCommunityListSerializer: ApiCommunityListSerializer,
    /**
     * The ApiIndicatorSerializer model constructor.
     * @property {module:model/ApiIndicatorSerializer}
     */
    ApiIndicatorSerializer: ApiIndicatorSerializer,
    /**
     * The ApiSecurityEventStatusSerializer model constructor.
     * @property {module:model/ApiSecurityEventStatusSerializer}
     */
    ApiSecurityEventStatusSerializer: ApiSecurityEventStatusSerializer,
    /**
     * The Attribution model constructor.
     * @property {module:model/Attribution}
     */
    Attribution: Attribution,
    /**
     * The Blacklist model constructor.
     * @property {module:model/Blacklist}
     */
    Blacklist: Blacklist,
    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection: Collection,
    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment: Comment,
    /**
     * The CommentSerializer model constructor.
     * @property {module:model/CommentSerializer}
     */
    CommentSerializer: CommentSerializer,
    /**
     * The Community model constructor.
     * @property {module:model/Community}
     */
    Community: Community,
    /**
     * The CommunityAlertSuppression model constructor.
     * @property {module:model/CommunityAlertSuppression}
     */
    CommunityAlertSuppression: CommunityAlertSuppression,
    /**
     * The CommunityFile model constructor.
     * @property {module:model/CommunityFile}
     */
    CommunityFile: CommunityFile,
    /**
     * The CommunityList model constructor.
     * @property {module:model/CommunityList}
     */
    CommunityList: CommunityList,
    /**
     * The CommunityMember model constructor.
     * @property {module:model/CommunityMember}
     */
    CommunityMember: CommunityMember,
    /**
     * The CommunityNameChartSerializer model constructor.
     * @property {module:model/CommunityNameChartSerializer}
     */
    CommunityNameChartSerializer: CommunityNameChartSerializer,
    /**
     * The Credential model constructor.
     * @property {module:model/Credential}
     */
    Credential: Credential,
    /**
     * The DefaultManagingTeams model constructor.
     * @property {module:model/DefaultManagingTeams}
     */
    DefaultManagingTeams: DefaultManagingTeams,
    /**
     * The EventNotification model constructor.
     * @property {module:model/EventNotification}
     */
    EventNotification: EventNotification,
    /**
     * The IndicatorComment model constructor.
     * @property {module:model/IndicatorComment}
     */
    IndicatorComment: IndicatorComment,
    /**
     * The Industry model constructor.
     * @property {module:model/Industry}
     */
    Industry: Industry,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse20010 model constructor.
     * @property {module:model/InlineResponse20010}
     */
    InlineResponse20010: InlineResponse20010,
    /**
     * The InlineResponse20011 model constructor.
     * @property {module:model/InlineResponse20011}
     */
    InlineResponse20011: InlineResponse20011,
    /**
     * The InlineResponse20012 model constructor.
     * @property {module:model/InlineResponse20012}
     */
    InlineResponse20012: InlineResponse20012,
    /**
     * The InlineResponse20013 model constructor.
     * @property {module:model/InlineResponse20013}
     */
    InlineResponse20013: InlineResponse20013,
    /**
     * The InlineResponse20014 model constructor.
     * @property {module:model/InlineResponse20014}
     */
    InlineResponse20014: InlineResponse20014,
    /**
     * The InlineResponse20015 model constructor.
     * @property {module:model/InlineResponse20015}
     */
    InlineResponse20015: InlineResponse20015,
    /**
     * The InlineResponse20016 model constructor.
     * @property {module:model/InlineResponse20016}
     */
    InlineResponse20016: InlineResponse20016,
    /**
     * The InlineResponse20017 model constructor.
     * @property {module:model/InlineResponse20017}
     */
    InlineResponse20017: InlineResponse20017,
    /**
     * The InlineResponse20018 model constructor.
     * @property {module:model/InlineResponse20018}
     */
    InlineResponse20018: InlineResponse20018,
    /**
     * The InlineResponse20019 model constructor.
     * @property {module:model/InlineResponse20019}
     */
    InlineResponse20019: InlineResponse20019,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse20020 model constructor.
     * @property {module:model/InlineResponse20020}
     */
    InlineResponse20020: InlineResponse20020,
    /**
     * The InlineResponse20021 model constructor.
     * @property {module:model/InlineResponse20021}
     */
    InlineResponse20021: InlineResponse20021,
    /**
     * The InlineResponse20022 model constructor.
     * @property {module:model/InlineResponse20022}
     */
    InlineResponse20022: InlineResponse20022,
    /**
     * The InlineResponse20023 model constructor.
     * @property {module:model/InlineResponse20023}
     */
    InlineResponse20023: InlineResponse20023,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006: InlineResponse2006,
    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007: InlineResponse2007,
    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008: InlineResponse2008,
    /**
     * The InlineResponse2009 model constructor.
     * @property {module:model/InlineResponse2009}
     */
    InlineResponse2009: InlineResponse2009,
    /**
     * The IntelDataCommunitySerializer model constructor.
     * @property {module:model/IntelDataCommunitySerializer}
     */
    IntelDataCommunitySerializer: IntelDataCommunitySerializer,
    /**
     * The IntelDataIndicatorSerializer model constructor.
     * @property {module:model/IntelDataIndicatorSerializer}
     */
    IntelDataIndicatorSerializer: IntelDataIndicatorSerializer,
    /**
     * The Invite model constructor.
     * @property {module:model/Invite}
     */
    Invite: Invite,
    /**
     * The JoinCommunity model constructor.
     * @property {module:model/JoinCommunity}
     */
    JoinCommunity: JoinCommunity,
    /**
     * The JoinTeam model constructor.
     * @property {module:model/JoinTeam}
     */
    JoinTeam: JoinTeam,
    /**
     * The LoginAttempt model constructor.
     * @property {module:model/LoginAttempt}
     */
    LoginAttempt: LoginAttempt,
    /**
     * The MarketplaceItemStoreTeam model constructor.
     * @property {module:model/MarketplaceItemStoreTeam}
     */
    MarketplaceItemStoreTeam: MarketplaceItemStoreTeam,
    /**
     * The MarketplacePolymorphic model constructor.
     * @property {module:model/MarketplacePolymorphic}
     */
    MarketplacePolymorphic: MarketplacePolymorphic,
    /**
     * The MarketplaceSourceCollection model constructor.
     * @property {module:model/MarketplaceSourceCollection}
     */
    MarketplaceSourceCollection: MarketplaceSourceCollection,
    /**
     * The MarketplaceStore model constructor.
     * @property {module:model/MarketplaceStore}
     */
    MarketplaceStore: MarketplaceStore,
    /**
     * The MetricsTeamSerializer model constructor.
     * @property {module:model/MetricsTeamSerializer}
     */
    MetricsTeamSerializer: MetricsTeamSerializer,
    /**
     * The MitreAttackTactic model constructor.
     * @property {module:model/MitreAttackTactic}
     */
    MitreAttackTactic: MitreAttackTactic,
    /**
     * The NameChartSerializer model constructor.
     * @property {module:model/NameChartSerializer}
     */
    NameChartSerializer: NameChartSerializer,
    /**
     * The NetworkSubnet model constructor.
     * @property {module:model/NetworkSubnet}
     */
    NetworkSubnet: NetworkSubnet,
    /**
     * The Observable model constructor.
     * @property {module:model/Observable}
     */
    Observable: Observable,
    /**
     * The Organizations model constructor.
     * @property {module:model/Organizations}
     */
    Organizations: Organizations,
    /**
     * The Preference model constructor.
     * @property {module:model/Preference}
     */
    Preference: Preference,
    /**
     * The PublicCommunitySerializer model constructor.
     * @property {module:model/PublicCommunitySerializer}
     */
    PublicCommunitySerializer: PublicCommunitySerializer,
    /**
     * The PublicFirewallBlacklistSerializer model constructor.
     * @property {module:model/PublicFirewallBlacklistSerializer}
     */
    PublicFirewallBlacklistSerializer: PublicFirewallBlacklistSerializer,
    /**
     * The PublicIndicatorSerializer model constructor.
     * @property {module:model/PublicIndicatorSerializer}
     */
    PublicIndicatorSerializer: PublicIndicatorSerializer,
    /**
     * The PublicObservableSerializer model constructor.
     * @property {module:model/PublicObservableSerializer}
     */
    PublicObservableSerializer: PublicObservableSerializer,
    /**
     * The PublicTeamSerializer model constructor.
     * @property {module:model/PublicTeamSerializer}
     */
    PublicTeamSerializer: PublicTeamSerializer,
    /**
     * The PublicUserSerializer model constructor.
     * @property {module:model/PublicUserSerializer}
     */
    PublicUserSerializer: PublicUserSerializer,
    /**
     * The RegisterDevice model constructor.
     * @property {module:model/RegisterDevice}
     */
    RegisterDevice: RegisterDevice,
    /**
     * The RegisterUser model constructor.
     * @property {module:model/RegisterUser}
     */
    RegisterUser: RegisterUser,
    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report: Report,
    /**
     * The SLA model constructor.
     * @property {module:model/SLA}
     */
    SLA: SLA,
    /**
     * The SLACreation model constructor.
     * @property {module:model/SLACreation}
     */
    SLACreation: SLACreation,
    /**
     * The SLATeam model constructor.
     * @property {module:model/SLATeam}
     */
    SLATeam: SLATeam,
    /**
     * The SLAWindowCreation model constructor.
     * @property {module:model/SLAWindowCreation}
     */
    SLAWindowCreation: SLAWindowCreation,
    /**
     * The SavedObject model constructor.
     * @property {module:model/SavedObject}
     */
    SavedObject: SavedObject,
    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule: Schedule,
    /**
     * The ScheduledReport model constructor.
     * @property {module:model/ScheduledReport}
     */
    ScheduledReport: ScheduledReport,
    /**
     * The SensorCommand model constructor.
     * @property {module:model/SensorCommand}
     */
    SensorCommand: SensorCommand,
    /**
     * The SensorCommandResult model constructor.
     * @property {module:model/SensorCommandResult}
     */
    SensorCommandResult: SensorCommandResult,
    /**
     * The SiemAlertableMapping model constructor.
     * @property {module:model/SiemAlertableMapping}
     */
    SiemAlertableMapping: SiemAlertableMapping,
    /**
     * The SoftwareApproval model constructor.
     * @property {module:model/SoftwareApproval}
     */
    SoftwareApproval: SoftwareApproval,
    /**
     * The SoftwareApprovalList model constructor.
     * @property {module:model/SoftwareApprovalList}
     */
    SoftwareApprovalList: SoftwareApprovalList,
    /**
     * The SoftwareWatchlist model constructor.
     * @property {module:model/SoftwareWatchlist}
     */
    SoftwareWatchlist: SoftwareWatchlist,
    /**
     * The Store model constructor.
     * @property {module:model/Store}
     */
    Store: Store,
    /**
     * The StoreTeam model constructor.
     * @property {module:model/StoreTeam}
     */
    StoreTeam: StoreTeam,
    /**
     * The SupportedDevice model constructor.
     * @property {module:model/SupportedDevice}
     */
    SupportedDevice: SupportedDevice,
    /**
     * The SuppressionsAndEscalations model constructor.
     * @property {module:model/SuppressionsAndEscalations}
     */
    SuppressionsAndEscalations: SuppressionsAndEscalations,
    /**
     * The TeamEnterpriseSSO model constructor.
     * @property {module:model/TeamEnterpriseSSO}
     */
    TeamEnterpriseSSO: TeamEnterpriseSSO,
    /**
     * The TeamHealth model constructor.
     * @property {module:model/TeamHealth}
     */
    TeamHealth: TeamHealth,
    /**
     * The TeamIntegration model constructor.
     * @property {module:model/TeamIntegration}
     */
    TeamIntegration: TeamIntegration,
    /**
     * The TeamIntegrationLogEventWithTeam model constructor.
     * @property {module:model/TeamIntegrationLogEventWithTeam}
     */
    TeamIntegrationLogEventWithTeam: TeamIntegrationLogEventWithTeam,
    /**
     * The TeamIpCount model constructor.
     * @property {module:model/TeamIpCount}
     */
    TeamIpCount: TeamIpCount,
    /**
     * The TeamMfaSettings model constructor.
     * @property {module:model/TeamMfaSettings}
     */
    TeamMfaSettings: TeamMfaSettings,
    /**
     * The TeamNoisyHosts model constructor.
     * @property {module:model/TeamNoisyHosts}
     */
    TeamNoisyHosts: TeamNoisyHosts,
    /**
     * The TeamSuppressionReasons model constructor.
     * @property {module:model/TeamSuppressionReasons}
     */
    TeamSuppressionReasons: TeamSuppressionReasons,
    /**
     * The TeamUsage model constructor.
     * @property {module:model/TeamUsage}
     */
    TeamUsage: TeamUsage,
    /**
     * The TeamWebhook model constructor.
     * @property {module:model/TeamWebhook}
     */
    TeamWebhook: TeamWebhook,
    /**
     * The TriggeredEventNotification model constructor.
     * @property {module:model/TriggeredEventNotification}
     */
    TriggeredEventNotification: TriggeredEventNotification,
    /**
     * The TriggeredEventNotificationSerializer model constructor.
     * @property {module:model/TriggeredEventNotificationSerializer}
     */
    TriggeredEventNotificationSerializer: TriggeredEventNotificationSerializer,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserTeamList model constructor.
     * @property {module:model/UserTeamList}
     */
    UserTeamList: UserTeamList,
    /**
     * The Warnings model constructor.
     * @property {module:model/Warnings}
     */
    Warnings: Warnings,
    /**
     * The AddOnsApi service constructor.
     * @property {module:api/AddOnsApi}
     */
    AddOnsApi: AddOnsApi,
    /**
     * The AlertsApi service constructor.
     * @property {module:api/AlertsApi}
     */
    AlertsApi: AlertsApi,
    /**
     * The ApiUserApi service constructor.
     * @property {module:api/ApiUserApi}
     */
    ApiUserApi: ApiUserApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The BacktestApi service constructor.
     * @property {module:api/BacktestApi}
     */
    BacktestApi: BacktestApi,
    /**
     * The CommentsApi service constructor.
     * @property {module:api/CommentsApi}
     */
    CommentsApi: CommentsApi,
    /**
     * The CommunitiesApi service constructor.
     * @property {module:api/CommunitiesApi}
     */
    CommunitiesApi: CommunitiesApi,
    /**
     * The CommunityApi service constructor.
     * @property {module:api/CommunityApi}
     */
    CommunityApi: CommunityApi,
    /**
     * The CompanyApi service constructor.
     * @property {module:api/CompanyApi}
     */
    CompanyApi: CompanyApi,
    /**
     * The CompanyDetailValuesApi service constructor.
     * @property {module:api/CompanyDetailValuesApi}
     */
    CompanyDetailValuesApi: CompanyDetailValuesApi,
    /**
     * The ConfirmApi service constructor.
     * @property {module:api/ConfirmApi}
     */
    ConfirmApi: ConfirmApi,
    /**
     * The EmailAvailabilityApi service constructor.
     * @property {module:api/EmailAvailabilityApi}
     */
    EmailAvailabilityApi: EmailAvailabilityApi,
    /**
     * The EventsApi service constructor.
     * @property {module:api/EventsApi}
     */
    EventsApi: EventsApi,
    /**
     * The IndicatorsApi service constructor.
     * @property {module:api/IndicatorsApi}
     */
    IndicatorsApi: IndicatorsApi,
    /**
     * The IndustryListApi service constructor.
     * @property {module:api/IndustryListApi}
     */
    IndustryListApi: IndustryListApi,
    /**
     * The IntegrationsApi service constructor.
     * @property {module:api/IntegrationsApi}
     */
    IntegrationsApi: IntegrationsApi,
    /**
     * The InviteApi service constructor.
     * @property {module:api/InviteApi}
     */
    InviteApi: InviteApi,
    /**
     * The LegacyApi service constructor.
     * @property {module:api/LegacyApi}
     */
    LegacyApi: LegacyApi,
    /**
     * The MetricsApi service constructor.
     * @property {module:api/MetricsApi}
     */
    MetricsApi: MetricsApi,
    /**
     * The MitreAttackTacticsApi service constructor.
     * @property {module:api/MitreAttackTacticsApi}
     */
    MitreAttackTacticsApi: MitreAttackTacticsApi,
    /**
     * The MspApi service constructor.
     * @property {module:api/MspApi}
     */
    MspApi: MspApi,
    /**
     * The ObjectDetailApi service constructor.
     * @property {module:api/ObjectDetailApi}
     */
    ObjectDetailApi: ObjectDetailApi,
    /**
     * The PerchybanaApi service constructor.
     * @property {module:api/PerchybanaApi}
     */
    PerchybanaApi: PerchybanaApi,
    /**
     * The PostalcodeGeohashApi service constructor.
     * @property {module:api/PostalcodeGeohashApi}
     */
    PostalcodeGeohashApi: PostalcodeGeohashApi,
    /**
     * The RegisterDeviceApi service constructor.
     * @property {module:api/RegisterDeviceApi}
     */
    RegisterDeviceApi: RegisterDeviceApi,
    /**
     * The RegisterTeamApi service constructor.
     * @property {module:api/RegisterTeamApi}
     */
    RegisterTeamApi: RegisterTeamApi,
    /**
     * The RegisterUserApi service constructor.
     * @property {module:api/RegisterUserApi}
     */
    RegisterUserApi: RegisterUserApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SecurityEventsApi service constructor.
     * @property {module:api/SecurityEventsApi}
     */
    SecurityEventsApi: SecurityEventsApi,
    /**
     * The SensorApi service constructor.
     * @property {module:api/SensorApi}
     */
    SensorApi: SensorApi,
    /**
     * The SiemAlertingApi service constructor.
     * @property {module:api/SiemAlertingApi}
     */
    SiemAlertingApi: SiemAlertingApi,
    /**
     * The SlackBotApi service constructor.
     * @property {module:api/SlackBotApi}
     */
    SlackBotApi: SlackBotApi,
    /**
     * The SoftwareWatchlistApi service constructor.
     * @property {module:api/SoftwareWatchlistApi}
     */
    SoftwareWatchlistApi: SoftwareWatchlistApi,
    /**
     * The SquawkboxApi service constructor.
     * @property {module:api/SquawkboxApi}
     */
    SquawkboxApi: SquawkboxApi,
    /**
     * The SummaryApi service constructor.
     * @property {module:api/SummaryApi}
     */
    SummaryApi: SummaryApi,
    /**
     * The SuppressionApi service constructor.
     * @property {module:api/SuppressionApi}
     */
    SuppressionApi: SuppressionApi,
    /**
     * The SuppressionsApi service constructor.
     * @property {module:api/SuppressionsApi}
     */
    SuppressionsApi: SuppressionsApi,
    /**
     * The TeamsApi service constructor.
     * @property {module:api/TeamsApi}
     */
    TeamsApi: TeamsApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The V1Api service constructor.
     * @property {module:api/V1Api}
     */
    V1Api: V1Api,
    /**
     * The V2Api service constructor.
     * @property {module:api/V2Api}
     */
    V2Api: V2Api,
    /**
     * The VersionApi service constructor.
     * @property {module:api/VersionApi}
     */
    VersionApi: VersionApi
  };

  return exports;
}));
